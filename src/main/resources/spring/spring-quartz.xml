<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-contex.xsd">

	<!-- Quartz是一个开源的框架，实现的功能也是任务调度。它采用工厂模式进行任务调度， 主要有3个概念：JobDetail、Tigger、SchedulerFactory，个人简单的理解就是： 
		什么事情(JobDetail）在什么时候（Tigger）有哪位大爷（SchedulerFactory）调配着做。当然，Qaurtz的功能十分强大 -->

	<bean id="productSellDailyServiceImpl"
		class="cn.jing.campusShop.service.impl.ProductSellDailyServiceImpl"></bean>
	<!-- 创建JobDetailFactory并返回（new出JobDetailFactory对象，此工厂主要是用来制作一个JobDetail，即制作一个任务， 
		由于我们所做的定时任务根本上讲其实就是执行一个方法。所有使用这个工厂比较方便） -->
	<bean id="jobDetailFactory"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 设置jobDetail的名字 -->
		<property name="name" value="product_sell_daily_job"></property>
		<!-- 设置jobDetail的组名 -->
		<property name="group" value="job_product_sell_daily_group"></property>
		<!-- 指定运行任务的类 建议使用ref属性而不是value属性 -->
		<property name="targetObject" ref="productSellDailyServiceImpl"></property>
		<!-- 指定运行任务的方法 -->
		<property name="targetMethod" value="dailyCalculate"></property>
		<!-- 对于相同的JobDetail，当指定多个Trigger时，很可能第一个job完成之前，第二个job就开始了。 当指定concurrent设为false，多个job不会并发运行，第二个job将不会在第一个job完成之前开始 -->
		<!-- 作业不并发调度 -->
		<property name="concurrent" value="false"></property>
	</bean>

	<!-- 创建cronTriggerFactory并返回，创建triggerFactory实例，用来创建trigger -->
	<bean id="productSellDailyTriggerFactory"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<!-- 设置triggerFactory的名字 -->
		<property name="name" value="product_sell_daily_trigger"></property>
		<!-- 设置triggerFactory的组名 -->
		<property name="group" value="job_product_sell_daily_group"></property>
		<!-- 绑定jobDetail -->
		<property name="jobDetail" ref="jobDetailFactory"></property>
		<!-- 设定cron表达式 可利用在线cront表达式生成器 (选择在凌晨定时开启任务统计数据，因为凌晨访问量较低) -->
		<property name="cronExpression" value="0 0 0 * * ? *"></property>
	</bean>

	<!-- 以下是Quartz定时调度配制 （创建调度工厂并返回） -->
	<bean id="schedulerFactory"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="productSellDailyTriggerFactory" />
			</list>
		</property>
	</bean>
</beans>